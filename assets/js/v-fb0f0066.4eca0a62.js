(self.webpackChunkFreeSql_Wiki_VuePress=self.webpackChunkFreeSql_Wiki_VuePress||[]).push([[7170],{4303:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-fb0f0066",path:"/guide/getting-started.html",title:"入门",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"模型",slug:"模型",children:[]},{level:2,title:"安装包",slug:"安装包",children:[]},{level:2,title:"声明",slug:"声明",children:[]},{level:2,title:"迁移",slug:"迁移",children:[]},{level:2,title:"查询",slug:"查询",children:[]},{level:2,title:"插入",slug:"插入",children:[]},{level:2,title:"更新",slug:"更新",children:[]},{level:2,title:"删除",slug:"删除",children:[]}],filePathRelative:"guide/getting-started.md",git:{updatedTime:1614165261e3,contributors:[]}}},1802:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>S});var t=a(8133);const e=(0,t.Wm)("h1",{id:"入门"},[(0,t.Wm)("a",{class:"header-anchor",href:"#入门"},"#"),(0,t.Uk)(" 入门")],-1),p=(0,t.Wm)("p",null,"FreeSql是功能强大的 .NET ORM，支持 .NetFramework 4.0+、.NetCore 2.1+、Xamarin 等支持 NetStandard 所有运行平台。",-1),o=(0,t.Wm)("p",null,"支持 MySql/SqlServer/PostgreSQL/Oracle/Sqlite/Firebird/达梦/神通/人大金仓/翰高/华为GaussDB/MsAccess 数据库。",-1),c=(0,t.Wm)("p",null,"QQ群：4336577(已满)、8578575(在线)、52508226(在线)",-1),l=(0,t.Wm)("h2",{id:"模型"},[(0,t.Wm)("a",{class:"header-anchor",href:"#模型"},"#"),(0,t.Uk)(" 模型")],-1),r=(0,t.Wm)("p",null,"FreeSql 使用模型执行数据访问，模型由实体类表示数据库表或视图，用于查询和保存数据。",-1),u=(0,t.Uk)("可从现有数据库生成实体模型，FreeSql 提供 IDbFirst 接口实现"),i=(0,t.Uk)("生成实体模型"),d=(0,t.Uk)("。"),k=(0,t.uE)('<p>或者手动创建模型，基于模型创建或修改数据库，提供 ICodeFirst 同步结构的 API（甚至可以做到开发阶段自动同步）。</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">FreeSql<span class="token punctuation">.</span>DataAnnotations</span><span class="token punctuation">;</span>\n<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Blog</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Column</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsPrimary <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> BlogId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Url <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Rating <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="安装包"><a class="header-anchor" href="#安装包">#</a> 安装包</h2>',3),b=(0,t.Uk)("FreeSql.Provider.xxx("),m=(0,t.Uk)("可选的驱动"),g=(0,t.Uk)(")"),h=(0,t.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet <span class="token function">add</span> packages FreeSql\ndotnet <span class="token function">add</span> packages FreeSql.Provider.Sqlite\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>or</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Install-Package FreeSql\nInstall-Package FreeSql.Provider.Sqlite\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="声明"><a class="header-anchor" href="#声明">#</a> 声明</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">IFreeSql</span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> <span class="token string">@&quot;Data Source=db1.db&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">UseAutoSyncStructure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">//自动同步实体结构到数据库，FreeSql不会扫描程序集，只有CRUD时才会生成表。</span>\n    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//请务必定义成 Singleton 单例模式</span>\n    \n    <span class="token comment">//注意： IFreeSql 在项目中应以单例声明，而不是在每次使用的时候创建。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>.NET Core 单例 Startup.cs</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token class-name">IFreeSql</span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>xxxx<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IFreeSql<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>fsql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>.NET Framework 单例</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DB</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token class-name">Lazy<span class="token punctuation">&lt;</span>IFreeSql<span class="token punctuation">&gt;</span></span> mysqlLazy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Lazy<span class="token punctuation">&lt;</span>IFreeSql<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>xxx<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IFreeSql</span> MySql<span class="token operator">=&gt;</span> mysqlLazy<span class="token punctuation">.</span>Value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>IFreeSql 是 ORM 最顶级对象，所有操作都是使用它的方法或者属性：</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>\nfsql<span class="token punctuation">.</span>Select<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//查询</span>\nfsql<span class="token punctuation">.</span>Insert<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//插入</span>\nfsql<span class="token punctuation">.</span>Update<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//更新</span>\nfsql<span class="token punctuation">.</span>Delete<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//删除</span>\nfsql<span class="token punctuation">.</span>InsertOrUpdate<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 插入或更新</span>\nfsql<span class="token punctuation">.</span><span class="token function">Transaction</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//事务</span>\n\nfsql<span class="token punctuation">.</span>CodeFirst<span class="token punctuation">;</span> <span class="token comment">//CodeFirst 对象</span>\nfsql<span class="token punctuation">.</span>DbFirst<span class="token punctuation">;</span> <span class="token comment">//DbFirst 对象</span>\nfsql<span class="token punctuation">.</span>Ado<span class="token punctuation">;</span> <span class="token comment">//Ado 对象</span>\nfsql<span class="token punctuation">.</span>Aop<span class="token punctuation">;</span> <span class="token comment">//Aop 对象</span>\nfsql<span class="token punctuation">.</span>GlobalFilter<span class="token punctuation">;</span> <span class="token comment">//全局过滤器对象</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="迁移"><a class="header-anchor" href="#迁移">#</a> 迁移</h2><p>程序运行中FreeSql会检查AutoSyncStructure参数，以此条件判断是否对比实体与数据库结构之间的变化，达到自动迁移的目的,更多请查看<a href="CodeFirst">CodeFirst</a>文档，</p><blockquote><p>注意：谨慎、谨慎、谨慎在生产环境中使用该功能。</p></blockquote><blockquote><p>注意：谨慎、谨慎、谨慎在生产环境中使用该功能。</p></blockquote><blockquote><p>注意：谨慎、谨慎、谨慎在生产环境中使用该功能。</p></blockquote><h2 id="查询"><a class="header-anchor" href="#查询">#</a> 查询</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> blogs <span class="token operator">=</span> fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Rating <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Url<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Skip</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">//第100行-110行的记录</span>\n    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="插入"><a class="header-anchor" href="#插入">#</a> 插入</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> blog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Blog</span> <span class="token punctuation">{</span> Url <span class="token operator">=</span> <span class="token string">&quot;http://sample.com&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\nblog<span class="token punctuation">.</span>BlogId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Insert</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">AppendData</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ExecuteIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="更新"><a class="header-anchor" href="#更新">#</a> 更新</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Url<span class="token punctuation">,</span> <span class="token string">&quot;http://sample2222.com&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Url <span class="token operator">==</span> <span class="token string">&quot;http://sample.com&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="删除"><a class="header-anchor" href="#删除">#</a> 删除</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>fsql<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Blog<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>b <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>Url <span class="token operator">==</span> <span class="token string">&quot;http://sample.com&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">ExecuteAffrows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h1 id="freesqlbuilder"><a class="header-anchor" href="#freesqlbuilder">#</a> FreeSqlBuilder</h1><table><thead><tr><th>方法</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>UseConnectionString</td><td>this</td><td>设置连接串</td></tr><tr><td>UseSlave</td><td>this</td><td>设置从数据库，支持多个</td></tr><tr><td>UseConnectionFactory</td><td>this</td><td>设置自定义数据库连接对象（放弃内置对象连接池技术）</td></tr><tr><td>UseAutoSyncStructure</td><td>this</td><td>【开发环境必备】自动同步实体结构到数据库，程序运行中检查实体创建或修改表结构</td></tr><tr><td>UseNoneCommandParameter</td><td>this</td><td>不使用命令参数化执行，针对 Insert/Update，也可临时使用 IInsert/IUpdate.NoneParameter()</td></tr><tr><td>UseGenerateCommandParameterWithLambda</td><td>this</td><td>生成命令参数化执行，针对 lambda 表达式解析</td></tr><tr><td>UseLazyLoading</td><td>this</td><td>开启延时加载功能</td></tr><tr><td>UseMonitorCommand</td><td>this</td><td>监视全局 SQL 执行前后</td></tr><tr><td>UseNameConvert</td><td>this</td><td>自动转换名称 Entity -&gt; Db</td></tr><tr><td>UseExitAutoDisposePool</td><td>this</td><td>监听 AppDomain.CurrentDomain.ProcessExit/Console.CancelKeyPress 事件自动释放连接池 (默认true)</td></tr><tr><td>Build&lt;T&gt;</td><td>IFreeSql&lt;T&gt;</td><td>创建一个 IFreeSql 对象，注意：单例设计，不要重复创建</td></tr></tbody></table><h1 id="connectionstrings"><a class="header-anchor" href="#connectionstrings">#</a> ConnectionStrings</h1><table><thead><tr><th>DataType</th><th>ConnectionString</th></tr></thead><tbody><tr><td>DataType.MySql</td><td>Data Source=127.0.0.1;Port=3306;User ID=root;Password=root; Initial Catalog=cccddd;Charset=utf8; SslMode=none;Min pool size=1</td></tr><tr><td>DataType.PostgreSQL</td><td>Host=192.168.164.10;Port=5432;Username=postgres;Password=123456; Database=tedb;Pooling=true;Minimum Pool Size=1</td></tr><tr><td>DataType.SqlServer</td><td>Data Source=.;User Id=sa;Password=123456;Initial Catalog=freesqlTest;Pooling=true;Min Pool Size=1</td></tr><tr><td>DataType.Oracle</td><td>user id=user1;password=123456; data source=//127.0.0.1:1521/XE;Pooling=true;Min Pool Size=1</td></tr><tr><td>DataType.Sqlite</td><td>Data Source=|DataDirectory|\\document.db; Attachs=xxxtb.db; Pooling=true;Min Pool Size=1</td></tr><tr><td>DataType.Firebird</td><td>database=localhost:D:\\fbdata\\EXAMPLES.fdb;user=sysdba;password=123456</td></tr><tr><td>DataType.MsAccess</td><td>Provider=Microsoft.Jet.OleDb.4.0;Data Source=d:/accdb/2003.mdb</td></tr><tr><td>DataType.Dameng(达梦)</td><td>server=127.0.0.1;port=5236;user id=2user;password=123456789;database=2user;poolsize=5</td></tr><tr><td>DataType.ShenTong(神通)</td><td>HOST=192.168.164.10;PORT=2003;DATABASE=OSRDB;USERNAME=SYSDBA;PASSWORD=szoscar55;MAXPOOLSIZE=2</td></tr><tr><td>DataType.KingbaseES(人大金仓)</td><td>Server=127.0.0.1;Port=54321;UID=USER2;PWD=123456789;database=TEST;MAXPOOLSIZE=2</td></tr><tr><td>DataType.OdbcMySql</td><td>Driver={MySQL ODBC 8.0 Unicode Driver}; Server=127.0.0.1;Persist Security Info=False; Trusted_Connection=Yes;UID=root;PWD=root; DATABASE=cccddd_odbc;Charset=utf8; SslMode=none;Min Pool Size=1</td></tr><tr><td>DataType.OdbcSqlServer</td><td>Driver={SQL Server};Server=.;Persist Security Info=False; Trusted_Connection=Yes;Integrated Security=True; DATABASE=freesqlTest_odbc; Pooling=true;Min Pool Size=1</td></tr><tr><td>DataType.OdbcOracle</td><td>Driver={Oracle in XE};Server=//127.0.0.1:1521/XE; Persist Security Info=False; Trusted_Connection=Yes;UID=odbc1;PWD=123456; Min Pool Size=1</td></tr><tr><td>DataType.OdbcPostgreSQL</td><td>Driver={PostgreSQL Unicode(x64)};Server=192.168.164.10; Port=5432;UID=postgres;PWD=123456; Database=tedb_odbc;Pooling=true;Min Pool Size=1</td></tr><tr><td>DataType.OdbcDameng (达梦)</td><td>Driver={DM8 ODBC DRIVER};Server=127.0.0.1:5236; Persist Security Info=False; Trusted_Connection=Yes; UID=USER1;PWD=123456789</td></tr><tr><td>DataType.OdbcKingbaseES (人大金仓)</td><td>Driver={KingbaseES 8.2 ODBC Driver ANSI};Server=127.0.0.1;Port=54321;UID=USER2;PWD=123456789;database=TEST</td></tr><tr><td>DataType.Odbc</td><td>Driver={SQL Server};Server=.;Persist Security Info=False; Trusted_Connection=Yes;Integrated Security=True; DATABASE=freesqlTest_odbc; Pooling=true;Min pool size=1</td></tr></tbody></table>',28),S={render:function(n,s){const a=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[e,p,o,c,l,r,(0,t.Wm)("p",null,[u,(0,t.Wm)(a,{to:"/guide/db-first.html"},{default:(0,t.w5)((()=>[i])),_:1}),d]),k,(0,t.Wm)("p",null,[b,(0,t.Wm)(a,{to:"/guide/install.html"},{default:(0,t.w5)((()=>[m])),_:1}),g]),h],64)}}}}]);