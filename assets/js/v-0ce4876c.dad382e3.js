(self.webpackChunkFreeSql_Wiki_VuePress=self.webpackChunkFreeSql_Wiki_VuePress||[]).push([[2970],{4527:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-0ce4876c",path:"/guide/db-first.html",title:"DB First",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"获取所有数据库",slug:"获取所有数据库",children:[]},{level:3,title:"获取指定数据库的表信息",slug:"获取指定数据库的表信息",children:[]},{level:2,title:"安装 dotnet-tool 生成实体类（推荐使用）",slug:"安装-dotnet-tool-生成实体类-推荐使用",children:[]},{level:2,title:"安装 Winform 生成器（已停止更新）",slug:"安装-winform-生成器-已停止更新",children:[]}],filePathRelative:"guide/db-first.md",git:{updatedTime:1614165498e3,contributors:[]}}},8752:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>g});var e=a(8133);const t=(0,e.uE)('<h1 id="db-first"><a class="header-anchor" href="#db-first">#</a> DB First</h1><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token class-name">IFreeSql</span> fsql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FreeSql<span class="token punctuation">.</span>FreeSqlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">UseConnectionString</span><span class="token punctuation">(</span>FreeSql<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>MySql<span class="token punctuation">,</span> <span class="token string">&quot;Data Source=127.0.0.1;Port=3306;User ID=root;Password=root;Initial Catalog=cccddd;Charset=utf8;SslMode=none;Max pool size=10&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//请务必定义成 Singleton 单例模式</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="获取所有数据库"><a class="header-anchor" href="#获取所有数据库">#</a> 获取所有数据库</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> t1 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>DbFirst<span class="token punctuation">.</span><span class="token function">GetDatabases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//返回字符串数组, [&quot;cccddd&quot;, &quot;test&quot;]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="获取指定数据库的表信息"><a class="header-anchor" href="#获取指定数据库的表信息">#</a> 获取指定数据库的表信息</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> t2 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>DbFirst<span class="token punctuation">.</span><span class="token function">GetTablesByDatabase</span><span class="token punctuation">(</span>fsql<span class="token punctuation">.</span>DbFirst<span class="token punctuation">.</span><span class="token function">GetDatabases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//返回包括表、列详情、主键、唯一键、索引、外键、备注等等</span>\n\n<span class="token class-name"><span class="token keyword">var</span></span> t3 <span class="token operator">=</span> fsql<span class="token punctuation">.</span>DbFirst<span class="token punctuation">.</span><span class="token function">GetTableByName</span><span class="token punctuation">(</span><span class="token string">&quot;table1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//返回表的列详情、主键、唯一键、索引、备注等等</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="安装-dotnet-tool-生成实体类-推荐使用"><a class="header-anchor" href="#安装-dotnet-tool-生成实体类-推荐使用">#</a> 安装 dotnet-tool 生成实体类（推荐使用）</h2><blockquote><p>dotnet tool install -g FreeSql.Generator</p></blockquote><p>新建目录，在地址栏输入 cmd 快速打开命令窗口，输入命令：</p><blockquote><p>FreeSql.Generator --help</p></blockquote><p>命令行工具生成实体类极大好处，后续再次生成覆盖操作等于一键完成，并且支持 Mac/Linux 平台。</p>',11),p={href:"https://www.cnblogs.com/igeekfan/p/freesql-generator.html",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("详细解读：生成器是如何实现的？"),r=(0,e.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>C:\\WINDOWS\\system32&gt;FreeSql.Generator --help\n        ____                   ____         __\n       / __/  ____ ___  ___   / __/ ___ _  / /\n      / _/   / __// -_)/ -_) _\\ \\  / _ `/ / /\n     /_/    /_/   \\__/ \\__/ /___/  \\_, / /_/\n                                    /_/\n\n\n  # Github # https://github.com/2881099/FreeSql v2.0.105\n\n    FreeSql 快速生成数据库的实体类\n\n    更新工具：dotnet tool update -g FreeSql.Generator\n\n\n  # 快速开始 #\n\n  &gt; FreeSql.Generator -Razor 1 -NameOptions 0,0,0,0 -NameSpace MyProject -DB &quot;MySql,Data Source=127.0.0.1;...&quot;\n\n     -Razor 1                  * 选择模板：实体类+特性\n     -Razor 2                  * 选择模板：实体类+特性+导航属性\n     -Razor &quot;d:\\diy.cshtml&quot;    * 自定义模板文件\n\n     -NameOptions              * 4个布尔值对应：\n                                 首字母大写\n                                 首字母大写,其他小写\n                                 全部小写\n                                 下划线转驼峰\n\n     -NameSpace                * 命名空间\n\n     -DB &quot;MySql,data source=127.0.0.1;port=3306;user id=root;password=root;initial catalog=数据库;charset=utf8;sslmode=none;max pool size=2&quot;\n     -DB &quot;SqlServer,data source=.;integrated security=True;initial catalog=数据库;pooling=true;max pool size=2&quot;\n     -DB &quot;PostgreSQL,host=192.168.164.10;port=5432;username=postgres;password=123456;database=数据库;pooling=true;maximum pool size=2&quot;\n     -DB &quot;Oracle,user id=user1;password=123456;data source=//127.0.0.1:1521/XE;pooling=true;max pool size=2&quot;\n     -DB &quot;Sqlite,data source=document.db&quot;\n     -DB &quot;Firebird,database=localhost:D:\\fbdata\\EXAMPLES.fdb;user=sysdba;password=123456;max pool size=2&quot;\n     -DB &quot;Dameng,server=127.0.0.1;port=5236;user id=2user;password=123456789;database=2user;poolsize=2&quot;\n     -DB &quot;KingbaseES,server=127.0.0.1;port=54321;uid=USER2;pwd=123456789;database=数据库&quot;\n     -DB &quot;ShenTong,host=192.168.164.10;port=2003;database=数据库;username=SYSDBA;password=szoscar55;maxpoolsize=2&quot;\n                               * Dameng(达梦数据库)、KingbaseES(人大金仓数据库)、ShenTong(神舟通用数据库)\n\n     -Filter                   Table+View+StoreProcedure\n                               默认生成：表+视图+存储过程\n                               如果不想生成视图和存储过程 -Filter View+StoreProcedure\n\n     -Match                    表名或正则表达式，只生成匹配的表，如：dbo\\.TB_.+\n\n     -FileName                 文件名，默认：{name}.cs\n     -Output                   保存路径，默认为当前 shell 所在目录\n                               推荐在实体类目录创建 gen.bat，双击它重新所有实体类\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h2 id="安装-winform-生成器-已停止更新"><a class="header-anchor" href="#安装-winform-生成器-已停止更新">#</a> 安装 Winform 生成器（已停止更新）</h2>',2),o=(0,e.Uk)("源码地址："),c={href:"https://github.com/2881099/FreeSql.Tools",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("FreeSql.Tools"),i=(0,e.Uk)("作者："),b={href:"https://github.com/mypeng1985",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Uk)("mypeng1985"),d=(0,e.Uk)(" 开发了两个版本"),k=(0,e.Wm)("p",null,[(0,e.Wm)("img",{src:"https://user-images.githubusercontent.com/16286519/76141354-4790e980-609e-11ea-869b-bb2c6980d98f.png",alt:"image"})],-1),h=(0,e.Wm)("p",null,[(0,e.Wm)("img",{src:"https://user-images.githubusercontent.com/16286519/58793525-e0cf3300-8628-11e9-8959-d2efed685843.png",alt:"image"})],-1),g={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("p",null,[(0,e.Wm)("a",p,[l,(0,e.Wm)(a)])]),r,(0,e.Wm)("p",null,[o,(0,e.Wm)("a",c,[u,(0,e.Wm)(a)])]),(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[i,(0,e.Wm)("a",b,[m,(0,e.Wm)(a)]),d])]),k,h],64)}}}}]);